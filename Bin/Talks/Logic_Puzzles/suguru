#!/opt/perl/bin/perl

use 5.038;

use strict;
use warnings;
no  warnings 'syntax';

use Getopt::Long;

GetOptions 'subject'  =>  \my $do_subject,
           'pattern'  =>  \my $do_pattern,
           'solve'    =>  \my $do_solve,
           'playback' =>  \my $playback,
;

$do_solve   = 1 unless $do_subject || $do_pattern;
$do_solve ||= 1 if $playback;

my $rows = 0;
my $cols = 0;
my %groups;
my %given;
my $board;

my @givens;
my @blanks;

my sub label ($r, $c) {"R${r}C${c}"}

my $r = 0;
while (<>) {
    last if /^\s*$/;
    $r ++;
    my $c = 0;
    foreach my $group (/\S+/g) {
        $c ++;
        my $label = label $r, $c;
        push @{$groups {$group}} => $label;
        $$board [$r] [$c] = $group;
        $cols = $c if $cols < $c;
    }
    $rows = $r if $rows < $r;
}
$r = 1;
while (<>) {
    my $c = 1;
    foreach my $given (/\S+/g) {
        if ($given ne ".") {
            my $label = label $r, $c;
            $given {$label} = $given;
            push @givens => [$r, $c];
        }
        else {
            push @blanks => [$r, $c];
        }
        $c ++;
    }
    $r ++;
}

my $subject = "";
my $pattern = "";

my @done;


foreach my $cell (@givens, @blanks) {
    my ($r, $c) = @$cell;
    my $label = label $r, $c;
    my $given = $given {$label};
    my $name  = $$board [$r] [$c];
    if ($given) {
        $subject .= "$given;";
        $pattern .= "(?<$label>$given);"
    }
    else {
        my @group = @{$groups {$name}};
        my $size  = @group;
        my $list  = join "" => 1 .. $size;
        $subject .= "$list;";
        my $range = "[1-$size]";
        $pattern .= "$range*(?<$label>$range)$range*;";
        $pattern .= qq <(?{say '$label = ', \$^N})> if $playback;
    }

    #
    # If this cell touches an already seen cell, or is in the
    # same group as this cell, the values must differ
    #
    foreach my $done (@done) {
        my ($dr, $dc) = @$done;
        my $name  = $$board [$r]  [$c];
        my $dname = $$board [$dr] [$dc];
        if (abs ($r - $dr) <= 1 && abs ($c - $dc) <= 1 || $name eq $dname) {
            #
            # Must be unequal
            #
            my $size  = @{$groups {$name}};
            my $dsize = @{$groups {$dname}};
            foreach my $v1 (1 .. $size) {
                foreach my $v2 (1 .. $dsize) {
                    next if $v1 == $v2;
                    $subject .= "$v1$v2";
                }
            }
            $subject  .= ";";
            my $range  = "[1-$size]";
            my $drange = "[1-$dsize]";
            my $dlabel = label $dr, $dc;
            $pattern  .= "(?:$range$drange)*\\g{$label}\\g{$dlabel}" .
                         "(?:$range$drange)*;";
        }
    }
     push @done => [$r, $c];
}

say $subject if $do_subject;
say $pattern if $do_pattern;

if ($do_solve) {
    use re 'eval';
    if ($subject =~ /^$pattern$/) {
        for my $r (1 .. $rows) {
            for my $c (1 .. $cols) {
                print $+ {"R${r}C${c}"}, " ";
            }
            print "\n";
        }
    }
    else {
        say "No solution";
    }
}

__END__

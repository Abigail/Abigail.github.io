#!/opt/perl/bin/perl

use 5.038;

use strict;
use warnings;
no  warnings 'syntax';

use Getopt::Long;

GetOptions 'subject'  =>  \my $do_subject,
           'pattern'  =>  \my $do_pattern,
           'solve'    =>  \my $do_solve,
           'playback' =>  \my $playback,
;

$do_solve   = 1 unless $do_subject || $do_pattern;
$do_solve ||= 1 if $playback;

my $rows = 0;
my $cols = 0;
my %given;

my sub label ($r, $c) {"R${r}C${c}"}

my $board = [];

my $r = 0;
while (<>) {
    $r ++;
    my $c = 0;
    foreach my $given (/\S+/g) {
        $c ++;
        if ($given ne ".") {
            my $label = label $r, $c;
            $given {$label} = $given;
        }
        $cols = $c if $cols < $c;
    }
    $rows = $r if $rows < $r;
}

my $subject = "";
my $pattern = "";

my @done;

foreach my $r (1 .. $rows) {
    foreach my $c (1 .. $cols) {
        my $label = label $r, $c;
        my $cell  = $$board [$r] [$c];

        if ($given {$label}) {
            my $given =  $given {$label};
            $subject .= "$given;";
            $pattern .= "(?<$label>$given);"
        }
        else {
            $subject .= "01;";
            $pattern .= "0?(?<$label>[01])1?;";
            $pattern .= qq <(?{say '$label = ', \$^N})> if $playback;
        }

        #
        # No three in a row horizontally
        #
        if ($c > 2) {
            $subject .= "01;";
            my $pat = "";
            foreach my $cp ($c - 2 .. $c) {
                my $label = label $r, $cp;
                $pat .= "\\g{$label}?";
            }
            $pattern .= $pat . $pat . ";";
        }

        #
        # No three in a row vertically
        #
        if ($r > 2) {
            $subject .= "01;";
            my $pat = "";
            foreach my $rp ($r - 2 .. $r) {
                my $label = label $rp, $c;
                $pat .= "\\g{$label}?";
            }
            $pattern .= $pat . $pat . ";";
        }

        #
        # Equal number of symbols in a row
        #
        if ($c == $cols) {
            foreach my $t ("0", "1") {
                $subject .= "$t" x ($cols / 2);
                $subject .= ";";
                my $pat = "";
                foreach my $cp (1 .. $cols) {
                    my $label = label $r, $cp;
                    $pat     .= "\\g{$label}?";
                }
                $pattern .= "$pat;";
            }
        }
        #
        # Equal number of symbols in a column
        #
        if ($r == $rows) {
            foreach my $t ("0", "1") {
                $subject .= "$t" x ($rows / 2);
                $subject .= ";";
                my $pat = "";
                foreach my $rp (1 .. $r) {
                    my $label = label $rp, $c;
                    $pat .= "\\g{$label}?";
                }
                $pattern .= "$pat;";
            }
        }
        #
        # Unequal rows; make sure previous rows differ
        #
        if ($c == $cols) {
            foreach my $rp (1 .. $r - 1) {
                $subject .= "01;";
                my $pat   = "";
                foreach my $cc (1 .. $cols) {
                    my $label1 = label $rp, $cc;
                    my $label2 = label $r,  $cc;
                    $pat .= "\\g{$label1}\\g{$label2}|" .
                            "\\g{$label2}\\g{$label1}|";
                }
                $pat =~ s/\|$//;
                $pattern .= "(?:$pat);";
            }
        }
        #
        # Unequal columns; make sure previous columns differ
        #
        if ($r == $rows) {
            foreach my $cp (1 .. $c - 1) {
                $subject .= "01;";
                my $pat   = "";
                foreach my $rr (1 .. $rows) {
                    my $label1 = label $rr, $cp;
                    my $label2 = label $rr, $c;
                    $pat .= "\\g{$label1}\\g{$label2}|" .
                            "\\g{$label2}\\g{$label1}|";
                }
                $pat =~ s/\|$//;
                $pattern .= "(?:$pat);";
            }
        }
    }
}


say $subject if $do_subject;
say $pattern if $do_pattern;

if ($do_solve) {
    use re 'eval';
    if ($subject =~ /^$pattern$/) {
        for my $r (1 .. $rows) {
            for my $c (1 .. $cols) {
                my $label = label $r, $c;
                print $+ {$label}, " ";
            }
            print "\n";
        }
    }
    else {
        say "No solution";
    }
}

__END__
